/* CSS rules */

/* html selector applies to everything within the html tags.
It doesn't overwrite any more specific styling, which * can sometimes do. */
html {
    box-sizing: border-box;
}

/* universal selector selects everything */
* {
    background-color: #383838;
}

/* type selectors select all elemets of that type */
/* type selectors can be grouped with a comma if rules apply to more than one selector (grouping selectors)*/
h1,
h2,
p {
    text-align: center;
    font-family: Arial, sans-serif;
    color: white
}

ul,
ol {
    line-height: 100px;
    font-family: Arial, sans-serif;
    color: white
}

/* set a rule that only applies to one selector but note this would be overwritten if
same declaration is also in group selector (cascade means rule for largest number of selectors win
if selectors are all of same specificity) */
ul {
    list-style: none;
}

/* class selectors apply to all elements of that class */
.ingredients {
    list-style:square;
}

.description {
    text-align: left;
}

/* Chaining selectors so that rule only applies if an element has all chained selectors as classes/type etc. */
h2.description {
    font-style: italic;
}

.allergens {
    font-size: small;
}

/* descendant combinators are used to apply rules to an element iff element matches selector and has an
ancestor that matches the first selector. Descendant combinator are represeted by a single space*/

ul .recipe-link {
    color: white
}

/* Cascade:
Specifity means more specific rule always wins (ID > Class > Type > Universal).
The rule with the largest number of selectors always wins if specificity is equal.
Typography-based properties (color, font-size, font-family, etc.) are usually inherited by child
but these are always overwritten by more specific rules.
If there are conflicting rules for the same number of selectors of the same type, rule defined last
(nearest the bottom of the css document) wins.
*/

.container {
    border: 10px solid white;
    max-width: 800px;
    margin: auto;
}